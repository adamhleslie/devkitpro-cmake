include_guard(GLOBAL)
# OUT: Static libraries for libogc in the form dkp::libogc::gamecube::X and dkp::libogc::wii::X

# Helper function used for importing
function(dkp_libogc_import lib_name is_cube_lib is_wii_lib)
    if(${is_cube_lib})
        dkp_message(CHECK_START "Importing ${lib_name} (Gamecube)")
        cmake_path(APPEND cube_lib_location "libogc/lib/cube" "lib${lib_name}.a")
        cmake_path(ABSOLUTE_PATH cube_lib_location BASE_DIRECTORY ${DEVKITPRO})
        if(EXISTS ${cube_lib_location})
            add_library(dkp::libogc::gamecube::${lib_name} STATIC IMPORTED)
            set_target_properties(dkp::libogc::gamecube::${lib_name} PROPERTIES
                    IMPORTED_LOCATION ${cube_lib_location}
            )
            target_include_directories(dkp::libogc::gamecube::${lib_name} INTERFACE "${DEVKITPRO}/libogc/include")
            dkp_message(CHECK_PASS "Imported")
        else()
            set(libogc_import_failed TRUE PARENT_SCOPE)
            dkp_message(CHECK_FAIL "Could not find at ${cube_lib_location}")
        endif()
    endif()

    if(${is_wii_lib})
        dkp_message(CHECK_START "Importing ${lib_name} (Wii)")
        cmake_path(APPEND wii_lib_location "libogc/lib/wii" "lib${lib_name}.a")
        cmake_path(ABSOLUTE_PATH wii_lib_location BASE_DIRECTORY ${DEVKITPRO})
        if(EXISTS ${wii_lib_location})
            add_library(dkp::libogc::wii::${lib_name} STATIC IMPORTED)
            set_target_properties(dkp::libogc::wii::${lib_name} PROPERTIES
                    IMPORTED_LOCATION ${wii_lib_location}
            )
            target_include_directories(dkp::libogc::wii::${lib_name} INTERFACE "${DEVKITPRO}/libogc/include")
            dkp_message(CHECK_PASS "Imported")
        else()
            set(libogc_import_failed TRUE PARENT_SCOPE)
            dkp_message(CHECK_FAIL "Could not find at ${wii_lib_location}")
        endif()
    endif()
endfunction(dkp_libogc_import)

set(libogc_import_failed FALSE)
dkp_message(CHECK_START "Importing libogc")
list(APPEND CMAKE_MESSAGE_INDENT "  ")

dkp_libogc_import(aesnd       TRUE  TRUE)
dkp_libogc_import(asnd        TRUE  TRUE)
dkp_libogc_import(bba         TRUE  FALSE)
dkp_libogc_import(bte         FALSE TRUE)
dkp_libogc_import(db          TRUE  TRUE)
dkp_libogc_import(di          FALSE TRUE)
dkp_libogc_import(fat         TRUE  TRUE)
dkp_libogc_import(gxflux      TRUE  TRUE)
dkp_libogc_import(iso9660     TRUE  TRUE)
dkp_libogc_import(mad         TRUE  TRUE)
dkp_libogc_import(modplay     TRUE  TRUE)
dkp_libogc_import(ogc         TRUE  TRUE)
dkp_libogc_import(tinysmb     TRUE  TRUE)
dkp_libogc_import(wiikeyboard FALSE TRUE)
dkp_libogc_import(wiiuse      FALSE TRUE)

list(POP_BACK CMAKE_MESSAGE_INDENT)
if(${libogc_import_failed})
    dkp_message(CHECK_FAIL "Missing components")
    dkp_message(FATAL_ERROR "Missing components")
else()
    dkp_message(CHECK_PASS "Imported all components")
endif()
